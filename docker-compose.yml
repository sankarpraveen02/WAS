version: "3.7"

networks:
  web:
    external: 
      name: ${bamboo_networkName}

volumes:
  volume:
    labels:
      com.docker.ucp.access.label: "/${bamboo_env}/apps"
  
secrets:
  server_xml:
    name: ${bamboo_stackName}_server_xml-${bamboo_buildNumber}
    file: ./server.xml
  server_env:
    name: ${bamboo_stackName}_server_env-${bamboo_buildNumber}
    file: ./${bamboo_ENV_LOCATION}/server.env
  bootstrap_properties:
    name: ${bamboo_stackName}_bootstrap_properties-${bamboo_buildNumber}
    file: ./${bamboo_ENV_LOCATION}/bootstrap.properties
  javam_options:
    name: ${bamboo_stackName}_javam_options-${bamboo_buildNumber}
    file: ./jvm.options
  tnsnames:
    name: ${bamboo_stackName}_tnsnames-${bamboo_buildNumber}
    file: ./tnsnames.ora
    
services:
  service:
    image: ${bamboo_imageName}
    volumes:
      - volume:/logs/
    networks:
      - web
    secrets:
      - source: server_xml
        target: /opt/ibm/wlp/usr/servers/defaultServer/server.xml
      - source: server_env
        target: /opt/ibm/wlp/usr/servers/defaultServer/server.env
      - source: bootstrap_properties
        target: /opt/ibm/wlp/usr/servers/defaultServer/bootstrap.properties
      - source: javam_options
        target: /opt/ibm/wlp/usr/servers/defaultServer/jvm.options
      - source: tnsnames
        target: /opt/ibm/wlp/usr/shared/resources/tnsnames.ora
    environment:
      - CONTAINER_ENV={{.Task.ID}}
    hostname: "{{.Service.Name}}_{{.Task.Slot}}_{{.Node.Hostname}}"
    deploy:
      labels:
        traefik.enable: "true"
        traefik.frontend.rule: 'PathPrefix: /${bamboo_CONTEXT_ROOT}'        
        traefik.domain: "metlife.co.jp"
        traefik.docker.network: ${bamboo_networkName}
        traefik.backend.loadbalancer.stickiness: "true"
        traefik.port: "9080"
        com.docker.ucp.access.label: "/${bamboo_env}/apps"
        com.metlife.docker.env: ${bamboo_env}
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 32M
      replicas: 2
      restart_policy:
        condition: any 
      update_config:
        parallelism: 1 
        delay: 10s 
        failure_action: rollback 
        monitor: 0s 
        max_failure_ratio: 0 
      placement:
        constraints:
          - 'node.role == worker'
          - 'node.labels.jp.co.metlife.purpose == app-worker'
          - 'node.labels.jp.co.metlife.sla == silver'
        preferences:
          - spread: node.labels.jp.co.metlife.zone
    healthcheck:
     test: curl -f --head -s http://localhost:9080/${bamboo_CONTEXT_ROOT}/'command/Hello' | grep "200 OK" && exit 0 || exit 1
     interval: 30s
     timeout: 15s
     retries: 3
     start_period: 3m
